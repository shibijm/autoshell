name: Release
run-name: Release ${{ inputs.version || github.ref_name }}
on:
  push:
    tags:
      - v*
  workflow_dispatch:
    inputs:
      version:
        required: true
        type: string
        description: Version (vX.X.X)
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      VERSION: ${{ inputs.version || github.ref_name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
          cache: true
      - name: Test
        run: go test -v ./...
      - name: Build
        run: |
          export CGO_ENABLED=0
          goos=(windows linux linux)
          goarch=(amd64 amd64 arm64)
          for i in ${!goos[@]}; do
            export GOOS=${goos[$i]}
            export GOARCH=${goarch[$i]}
            go build -ldflags "-s -w -X autoshell/utils.devicePassSeed=${{ secrets.DEVICE_PASS_SEED }}" -trimpath -o out/$GOOS-$GOARCH/
            cp README.md LICENSE COPYRIGHT NOTICE out/$GOOS-$GOARCH
          done
      - name: Create release ZIP files
        run: |
          cd out
          for filename in *; do
            if [[ -d $filename ]]; then
              mv $filename ${{ github.event.repository.name }}
              zip -rm ${{ github.event.repository.name }}-$VERSION-$filename.zip ${{ github.event.repository.name }}
            fi
          done
      - name: Delete existing GitHub release, if any
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
        run: gh release delete $VERSION --cleanup-tag --yes || true
      - name: Release on GitHub
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844
        with:
          tag_name: ${{ env.VERSION }}
          generate_release_notes: true
          files: out/*
